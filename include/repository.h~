/*
  Environments are responsible for setting the symbols correct way
  Also fulfill needed symbols as needed
*/

#pragma once
#include "stdafx.h"
#include "value.h"
#include "symbol.h"
#include "environment.h"
#include "function.h"
#include "user_func.h"
#include "builtin_func.h"

namespace lispic
{
     class Repository
     {
	  typedef Variables Environment<std::string, Value>
	  Keeper();
	  ~Keeper() {}
	  Keeper(const Keeper&) {}
	  Keeper& operator=(const Keeper&) {}
	  
	  Environment<std::string, BuiltinFunction*> builtins;
	  std::stack<Variables> variables;
	  
     public:
	  static Repository Get
	       {
		    static Repository envs;
		    return envs;
	       }
	  Value get(std::string);
	  bool has(std::string);
	  bool has_special(std::string);
	  Value get_special(std::string);
	  void set(std::string, Value);
     };
          
     Symbol sum(Symbols&);
     Symbol print(Symbols&);
     Symbol concat(Symbols&);
     Symbol def(Symbols&);
     Symbol set(Symbols&);
     Symbol lambda(Symbols&);
}
